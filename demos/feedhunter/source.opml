<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Wed, 08 Nov 2023 19:52:01 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: feedHunter</title>
		<dateCreated>Wed, 08 Nov 2023 19:37:13 GMT</dateCreated>
		<dateModified>Wed, 08 Nov 2023 19:52:01 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 3, 4, 14, 15, 19</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>103</windowTop>
		<windowLeft>162</windowLeft>
		<windowBottom>923</windowBottom>
		<windowRight>1357</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/feedhunter/" created="Thu, 13 Jul 2023 14:21:20 GMT">
			<outline text="worknotes.md" created="Sun, 18 Jun 2023 16:13:00 GMT">
				<outline text="#### 11/8/23; 9:53:51 AM by DW" created="Sat, 12 Aug 2023 22:34:42 GMT">
					<outline text="Started." created="Sat, 12 Aug 2023 22:34:44 GMT"/>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;feedhunter&quot;,"/>
					<outline text="&quot;description&quot;: &quot;Look for an HTML file's associated feed.&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;main&quot;: &quot;feedhunter.js&quot;,"/>
					<outline text="&quot;license&quot;: &quot;GPLV2&quot;," created="Wed, 18 Jan 2023 17:19:16 GMT"/>
					<outline text="&quot;repository&quot;: {">
						<outline text="&quot;type&quot;: &quot;git&quot;,"/>
						<outline text="&quot;url&quot;: &quot;https://github.com/scripting/reallysimple/tree/main/demos/feedhunter&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;reallysimple&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="feedhunter.js">
				<outline text="var myProductName = &quot;feedfinder&quot;, myVersion = &quot;0.4.0&quot;;"/>
				<outline text="" created="Wed, 08 Nov 2023 19:43:51 GMT"/>
				<outline text="exports.huntForFeed = huntForFeed;" created="Wed, 08 Nov 2023 19:43:51 GMT"/>
				<outline text="" created="Sat, 12 Aug 2023 22:37:22 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;); "/>
				<outline text="const request = require (&quot;request&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const reallysimple = require (&quot;reallysimple&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const urlpackage = require (&quot;url&quot;);" created="Tue, 21 Jan 2014 00:09:23 GMT" pgfnum="36074"/>
				<outline text="" created="Wed, 08 Nov 2023 15:30:48 GMT"/>
				<outline text="function httpReadUrl (url, callback) { //8/21/22 by DW" created="Mon, 20 Jan 2014 17:26:34 GMT" pgfnum="36035">
					<outline text="request (url, function (err, response, data) {">
						<outline text="if (err) {">
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (response.statusCode != 200) {">
								<outline text="const errstruct = {">
									<outline text="message: &quot;Can't read the URL, \&quot;&quot; + url + &quot;\&quot; because we received a status code of &quot; + response.statusCode + &quot;.&quot;,"/>
									<outline text="statusCode: response.statusCode"/>
									<outline text="};"/>
									</outline>
								<outline text="callback (errstruct);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="callback (undefined, data);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Mon, 20 Jan 2014 17:26:49 GMT" pgfnum="36038"/>
					</outline>
				<outline text="function getFeedsLinkedToFromHtml (htmlUrl, callback) { //11/8/23 by DW" created="Wed, 08 Nov 2023 14:59:04 GMT">
					<outline text="Changes" isComment="true" created="Wed, 08 Nov 2023 14:59:31 GMT">
						<outline text="11/8/23; 9:59:37 AM by DW" created="Wed, 08 Nov 2023 14:59:37 GMT">
							<outline text="Look for &lt;link&gt; elements that point to RSS or Atom feeds in the html text." created="Wed, 08 Nov 2023 14:59:38 GMT"/>
							</outline>
						</outline>
					<outline text="function findFeedsFromHTML (html) {">
						<outline text="const regex = /&lt;link[^&gt;]+type=&quot;application\/(?:rss\+xml|atom\+xml)&quot;[^&gt;]+href=&quot;([^&quot;]+)&quot;[^&gt;]*&gt;/g;"/>
						<outline text="let match;"/>
						<outline text="const feeds = [];"/>
						<outline text="while ((match = regex.exec (html)) !== null) {">
							<outline text="feeds.push (match [1]);"/>
							<outline text="}"/>
							</outline>
						<outline text="return (feeds);"/>
						<outline text="}"/>
						</outline>
					<outline text="httpReadUrl (htmlUrl, function (err, htmltext) {">
						<outline text="if (err) {">
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="var feedlist = findFeedsFromHTML (htmltext);"/>
							<outline text="if (feedlist.length == 0) {" created="Fri, 20 Oct 2023 13:58:40 GMT">
								<outline text="const message = &quot;Can't find any feeds in the HTML text.&quot;;" created="Fri, 20 Oct 2023 13:58:56 GMT"/>
								<outline text="callback ({message});"/>
								<outline text="}" created="Fri, 20 Oct 2023 13:58:48 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 20 Oct 2023 13:58:49 GMT">
								<outline text="callback (undefined, feedlist);" created="Fri, 20 Oct 2023 13:59:27 GMT"/>
								<outline text="}" created="Fri, 20 Oct 2023 13:58:51 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Wed, 08 Nov 2023 14:59:21 GMT"/>
					</outline>
				<outline text="function huntForFeed (htmlUrl, options, callback) {" created="Wed, 08 Nov 2023 15:23:24 GMT">
					<outline text="var config = {" created="Fri, 10 Feb 2023 16:10:01 GMT">
						<outline text="filePathsToCheck: [" created="Wed, 08 Nov 2023 15:30:47 GMT">
							<outline text="&quot;feed&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;rss&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;feeds/posts/default&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;feed.xml&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;rss.xml&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;index.xml&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;blog/feed&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;feeds/videos.xml&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;atom.xml&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;blog&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;rss/index.xml&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;feed.rss&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;feed/atom&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;feed/podcast&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;blog/rss.xml&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;blog/index.xml&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;news/feed&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;blog-feed.xml&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;rss.php&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;blog/rss&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;bridge01&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;feed.atom&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;blog/atom.xml&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;feed/rss&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;index.rss&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;RSSFeed.aspx&quot;," created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="&quot;blog/feed.xml&quot;" created="Wed, 08 Nov 2023 15:31:14 GMT"/>
							<outline text="]" created="Wed, 08 Nov 2023 15:31:06 GMT"/>
							</outline>
						<outline text="};" created="Fri, 10 Feb 2023 16:12:11 GMT"/>
						</outline>
					<outline text="if (options !== undefined) {" created="Wed, 08 Nov 2023 19:40:17 GMT">
						<outline text="for (var x in options) {" created="Wed, 08 Nov 2023 19:41:49 GMT">
							<outline text="config [x] = options [x];" created="Wed, 08 Nov 2023 19:42:13 GMT"/>
							<outline text="}" created="Wed, 08 Nov 2023 19:42:20 GMT"/>
							</outline>
						<outline text="}" created="Wed, 08 Nov 2023 19:40:28 GMT"/>
						</outline>
					<outline text="const parsedUrl = urlpackage.parse (htmlUrl, true);"/>
					<outline text="const origin = parsedUrl.protocol + &quot;//&quot; + parsedUrl.host + &quot;/&quot;;" created="Wed, 08 Nov 2023 16:31:42 GMT"/>
					<outline text="console.log (utils.jsonStringify (parsedUrl));" created="Wed, 08 Nov 2023 16:30:04 GMT"/>
					<outline text="console.log (&quot;origin == &quot; + origin);" created="Wed, 08 Nov 2023 15:47:49 GMT"/>
					<outline text="var fileQueue = new Array ();" created="Wed, 08 Nov 2023 15:28:53 GMT"/>
					<outline text="getFeedsLinkedToFromHtml (htmlUrl, function (err, feeds) {" created="Wed, 08 Nov 2023 15:05:07 GMT">
						<outline text="if (feeds !== undefined) {" created="Wed, 08 Nov 2023 15:29:13 GMT">
							<outline text="feeds.forEach (function (item) {" created="Wed, 08 Nov 2023 15:29:24 GMT">
								<outline text="fileQueue.push (item);" created="Wed, 08 Nov 2023 15:29:35 GMT"/>
								<outline text="});" created="Wed, 08 Nov 2023 15:29:30 GMT"/>
								</outline>
							<outline text="}" created="Wed, 08 Nov 2023 15:29:19 GMT"/>
							</outline>
						<outline text="config.filePathsToCheck.forEach (function (item) {" created="Wed, 08 Nov 2023 15:36:19 GMT">
							<outline text="fileQueue.push (origin + item);" created="Wed, 08 Nov 2023 15:29:35 GMT"/>
							<outline text="});" created="Wed, 08 Nov 2023 15:36:27 GMT"/>
							</outline>
						<outline text="function checkNext (ix) {" created="Wed, 08 Nov 2023 16:08:38 GMT">
							<outline text="if (ix &lt; fileQueue.length) {" created="Wed, 08 Nov 2023 16:08:50 GMT">
								<outline text="const feedUrl = fileQueue [ix];" created="Wed, 08 Nov 2023 16:09:42 GMT"/>
								<outline text="reallysimple.readFeed (feedUrl, function (err, theFeed) {" created="Sat, 19 Mar 2022 15:14:01 GMT">
									<outline text="if (err) {" created="Wed, 08 Nov 2023 16:11:00 GMT">
										<outline text="console.log (&quot;huntForFeed: feedUrl == &quot; + feedUrl);" created="Wed, 08 Nov 2023 16:12:26 GMT"/>
										<outline text="checkNext (ix + 1);" created="Wed, 08 Nov 2023 16:11:12 GMT"/>
										<outline text="}" created="Wed, 08 Nov 2023 16:11:22 GMT"/>
										</outline>
									<outline text="else {" created="Wed, 08 Nov 2023 16:11:24 GMT">
										<outline text="console.log (&quot;huntForFeed: found! feedUrl == &quot; + feedUrl);" created="Wed, 08 Nov 2023 16:12:26 GMT"/>
										<outline text="callback (feedUrl); " created="Wed, 08 Nov 2023 16:11:26 GMT"/>
										<outline text="}" created="Wed, 08 Nov 2023 16:11:33 GMT"/>
										</outline>
									<outline text="});" created="Sat, 19 Mar 2022 15:15:01 GMT"/>
									</outline>
								<outline text="}" created="Wed, 08 Nov 2023 16:09:05 GMT"/>
								</outline>
							<outline text="else {" created="Wed, 08 Nov 2023 16:09:06 GMT">
								<outline text="callback (undefined); //didn't find a feed" created="Wed, 08 Nov 2023 16:09:09 GMT"/>
								<outline text="}" created="Wed, 08 Nov 2023 16:09:20 GMT"/>
								</outline>
							<outline text="}" created="Wed, 08 Nov 2023 16:08:48 GMT"/>
							</outline>
						<outline text="checkNext (0);" created="Wed, 08 Nov 2023 16:07:59 GMT"/>
						<outline text="});" created="Wed, 08 Nov 2023 15:05:42 GMT"/>
						</outline>
					<outline text="}" created="Wed, 08 Nov 2023 15:23:37 GMT"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Wed, 08 Nov 2023 19:51:01 GMT">
				<outline text="# feedHunter" created="Wed, 08 Nov 2023 19:51:02 GMT">
					<outline text="Look for an HTML file's associated feed." created="Wed, 08 Nov 2023 19:51:09 GMT"/>
					</outline>
				</outline>
			<outline text="testing/testfeedhunter.js" isComment="true" created="Wed, 08 Nov 2023 19:39:11 GMT">
				<outline text="function readConfig (f, config, callback) {" created="Mon, 08 Mar 2021 15:19:44 GMT">
					<outline text="fs.readFile (f, function (err, jsontext) {" created="Mon, 08 Mar 2021 15:19:57 GMT">
						<outline text="if (!err) {" created="Mon, 08 Mar 2021 15:20:27 GMT">
							<outline text="try {" created="Mon, 08 Mar 2021 15:20:49 GMT">
								<outline text="var jstruct = JSON.parse (jsontext);" created="Mon, 08 Mar 2021 15:21:07 GMT"/>
								<outline text="for (var x in jstruct) {" created="Mon, 08 Mar 2021 15:21:14 GMT">
									<outline text="config [x] = jstruct [x];" created="Mon, 08 Mar 2021 15:21:20 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 15:21:25 GMT"/>
									</outline>
								<outline text="}" created="Mon, 08 Mar 2021 15:20:58 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Mon, 08 Mar 2021 15:20:59 GMT">
								<outline text="console.log (&quot;Error reading &quot; + f);" created="Mon, 08 Mar 2021 15:20:35 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 15:21:03 GMT"/>
								</outline>
							<outline text="}" created="Mon, 08 Mar 2021 15:20:30 GMT"/>
							</outline>
						<outline text="callback ();" created="Mon, 08 Mar 2021 15:22:15 GMT"/>
						<outline text="});" created="Mon, 08 Mar 2021 15:20:25 GMT"/>
						</outline>
					<outline text="}" created="Mon, 08 Mar 2021 15:19:56 GMT"/>
					</outline>
				<outline text="readConfig (&quot;config.json&quot;, config, function ()  {" created="Sat, 12 Aug 2023 23:07:16 GMT">
					<outline text="console.log (&quot;config == &quot; + utils.jsonStringify (config));" created="Mon, 14 Aug 2023 14:26:45 GMT"/>
					<outline text="" created="Wed, 08 Nov 2023 15:05:07 GMT"/>
					<outline text="huntForFeed (&quot;http://bullmancuso.com/index.opml&quot;, function (err) {" created="Wed, 08 Nov 2023 15:05:07 GMT">
						<outline text="if (err) {" created="Wed, 08 Nov 2023 15:05:44 GMT">
							<outline text="console.log (err.message);" created="Wed, 08 Nov 2023 15:05:47 GMT"/>
							<outline text="}" created="Wed, 08 Nov 2023 15:05:52 GMT"/>
							</outline>
						<outline text="});" created="Wed, 08 Nov 2023 15:05:42 GMT"/>
						</outline>
					<outline text="getFeedsLinkedToFromHtml (&quot;http://scripting.com/&quot;, function (err, feeds) {" isComment="true" created="Wed, 08 Nov 2023 15:05:07 GMT">
						<outline text="if (err) {" created="Wed, 08 Nov 2023 15:05:44 GMT">
							<outline text="console.log (err.message);" created="Wed, 08 Nov 2023 15:05:47 GMT"/>
							<outline text="}" created="Wed, 08 Nov 2023 15:05:52 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 08 Nov 2023 15:05:53 GMT">
							<outline text="console.log (utils.jsonStringify (feeds));" created="Wed, 08 Nov 2023 15:05:55 GMT"/>
							<outline text="}" created="Wed, 08 Nov 2023 15:06:05 GMT"/>
							</outline>
						<outline text="});" created="Wed, 08 Nov 2023 15:05:42 GMT"/>
						</outline>
					<outline text="" created="Wed, 08 Nov 2023 15:05:08 GMT"/>
					<outline text="" created="Wed, 08 Nov 2023 15:05:08 GMT"/>
					<outline text="" created="Wed, 08 Nov 2023 15:05:08 GMT"/>
					<outline text="});" created="Sat, 12 Aug 2023 23:07:41 GMT"/>
					</outline>
				<outline text="" created="Wed, 08 Nov 2023 19:39:25 GMT"/>
				</outline>
			<outline text="config.json" isComment="true" created="Mon, 14 Aug 2023 14:20:24 GMT">
				<outline text="{" created="Mon, 14 Aug 2023 14:20:26 GMT">
					<outline text="}" created="Mon, 14 Aug 2023 14:20:27 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Wed, 08 Nov 2023 19:48:56 GMT">
			<outline text="nodeEditorSuite.utilities.buildFeedHunter ()" created="Wed, 08 Nov 2023 19:48:58 GMT"/>
			</outline>
		</body>
	</opml>
