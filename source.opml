<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Sun, 20 Mar 2022 16:49:42 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: reallysimple</title>
		<dateCreated>Mon, 07 Mar 2022 14:28:16 GMT</dateCreated>
		<dateModified>Sun, 20 Mar 2022 16:49:42 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 15, 26, 35, 36, 37, 54, 56, 58, 59, 60, 61, 65, 66, 67, 71, 88, 102</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>143</windowTop>
		<windowLeft>1065</windowLeft>
		<windowBottom>1077</windowBottom>
		<windowRight>2110</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/reallysimple/">
			<outline text="package.json" created="Sat, 05 Mar 2022 16:54:16 GMT">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;reallysimple&quot;, "/>
					<outline text="&quot;description&quot;: &quot;Reads an RSS-like feed and calls back with a JavaScript structure, hiding all the history. It really is simple. ;-)&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.3&quot;, "/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;files&quot;: [">
						<outline text="&quot;reallysimple.js&quot;"/>
						<outline text="],"/>
						</outline>
					<outline text="&quot;main&quot;: &quot;reallysimple.js&quot;,"/>
					<outline text="&quot;repository&quot;: {">
						<outline text="&quot;type&quot;: &quot;git&quot;,"/>
						<outline text="&quot;url&quot;: &quot;https://github.com/scripting/reallysimple.git&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;opml&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davefeedread&quot;: &quot;*&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;engines&quot;: {">
						<outline text="&quot;node&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="reallysimple.js" created="Sat, 05 Mar 2022 16:54:20 GMT">
				<outline text="var myProductName = &quot;reallysimple&quot;; myVersion = &quot;0.4.3&quot;;   "/>
				<outline text="" created="Sat, 05 Mar 2022 16:58:48 GMT"/>
				<outline text="exports.readFeed = readFeed;"/>
				<outline text="exports.convertFeedToOpml = convertFeedToOpml;" created="Sat, 05 Mar 2022 17:10:21 GMT"/>
				<outline text="" created="Sat, 05 Mar 2022 17:07:20 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);"/>
				<outline text="const request = require (&quot;request&quot;);"/>
				<outline text="const davefeedread = require (&quot;davefeedread&quot;);"/>
				<outline text="" created="Sat, 05 Mar 2022 16:59:01 GMT"/>
				<outline text="const allowedHeadNames = [" created="Fri, 19 Nov 2021 16:17:57 GMT">
					<outline text="&quot;title&quot;, &quot;link&quot;, &quot;description&quot;, &quot;language&quot;, &quot;copyright&quot;, &quot;managingEditor&quot;, &quot;webMaster&quot;, &quot;lastBuildDate&quot;, &quot;pubDate&quot;, &quot;category&quot;," created="Fri, 19 Nov 2021 16:18:14 GMT"/>
					<outline text="&quot;generator&quot;, &quot;docs&quot;, &quot;cloud&quot;, &quot;ttl&quot;, &quot;image&quot;, &quot;rating&quot;, &quot;textInput&quot;, &quot;skipHours&quot;, &quot;skipDays&quot;, &quot;source:account&quot;, &quot;source:localtime&quot;" created="Fri, 19 Nov 2021 16:18:53 GMT"/>
					<outline text="];" created="Fri, 19 Nov 2021 16:18:06 GMT"/>
					</outline>
				<outline text="const allowedItemNames = [" created="Fri, 19 Nov 2021 16:17:57 GMT">
					<outline text="&quot;title&quot;, &quot;link&quot;, &quot;description&quot;, &quot;author&quot;, &quot;category&quot;, &quot;comments&quot;, &quot;enclosures&quot;, &quot;guid&quot;, &quot;pubDate&quot;, &quot;source&quot;, &quot;source:outline&quot;, &quot;source:likes&quot;" created="Fri, 19 Nov 2021 16:18:14 GMT"/>
					<outline text="];" created="Fri, 19 Nov 2021 16:18:06 GMT"/>
					</outline>
				<outline text="" created="Sat, 05 Mar 2022 17:26:17 GMT"/>
				<outline text="var config = {">
					<outline text="timeOutSecs: 3" created="Fri, 19 Nov 2021 15:47:33 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Sat, 05 Mar 2022 16:59:01 GMT"/>
				<outline text="function isEmptyObject (obj) {">
					<outline text="return (Object.keys (obj).length === 0);"/>
					<outline text="}"/>
					</outline>
				<outline text="function getItemPermalink (item) { ">
					<outline text="var rssguid = item [&quot;rss:guid&quot;], returnedval = undefined;"/>
					<outline text="if (rssguid !== undefined) {">
						<outline text="var atts = rssguid [&quot;@&quot;];"/>
						<outline text="if (atts.ispermalink === undefined) {">
							<outline text="returnedval = rssguid [&quot;#&quot;];"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (utils.getBoolean (atts.ispermalink)) {">
								<outline text="returnedval = rssguid [&quot;#&quot;];"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="if (returnedval !== undefined) {">
						<outline text="if (utils.beginsWith (returnedval, &quot;http&quot;)) {">
							<outline text="return (returnedval);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="return (undefined);"/>
					<outline text="}"/>
					</outline>
				<outline text="function convertFeedToOpml (theFeed) { //use this if you want to show an RSS feed in an outline" created="Fri, 19 Nov 2021 17:10:23 GMT">
					<outline text="var theOutline = {" created="Fri, 19 Nov 2021 17:20:00 GMT">
						<outline text="opml: {" created="Fri, 19 Nov 2021 17:22:35 GMT">
							<outline text="head: {" created="Fri, 19 Nov 2021 17:20:09 GMT">
								<outline text="title: theFeed.title" created="Fri, 19 Nov 2021 17:20:42 GMT"/>
								<outline text="}," created="Fri, 19 Nov 2021 17:20:13 GMT"/>
								</outline>
							<outline text="body: {" created="Fri, 19 Nov 2021 17:20:14 GMT">
								<outline text="subs: new Array ()" created="Fri, 19 Nov 2021 17:20:23 GMT"/>
								<outline text="}" created="Fri, 19 Nov 2021 17:20:17 GMT"/>
								</outline>
							<outline text="}" created="Fri, 19 Nov 2021 17:22:37 GMT"/>
							</outline>
						<outline text="}" created="Fri, 19 Nov 2021 17:20:08 GMT"/>
						</outline>
					<outline text="theFeed.items.forEach (function (item) {" created="Fri, 19 Nov 2021 17:22:13 GMT">
						<outline text="var linetext, subtext;" created="Fri, 19 Nov 2021 17:23:57 GMT"/>
						<outline text="if (item.title === undefined) {" created="Fri, 19 Nov 2021 17:23:57 GMT">
							<outline text="linetext = item.description;" created="Fri, 19 Nov 2021 17:24:22 GMT"/>
							<outline text="}" created="Fri, 19 Nov 2021 17:24:07 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 19 Nov 2021 17:24:08 GMT">
							<outline text="linetext = item.title;" created="Fri, 19 Nov 2021 17:24:22 GMT"/>
							<outline text="subtext = item.description;" created="Fri, 19 Nov 2021 17:24:52 GMT"/>
							<outline text="}" created="Fri, 19 Nov 2021 17:24:09 GMT"/>
							</outline>
						<outline text="theOutline.opml.body.subs.push ({" created="Fri, 19 Nov 2021 17:22:58 GMT">
							<outline text="text: linetext," created="Fri, 19 Nov 2021 17:23:39 GMT"/>
							<outline text="type: &quot;link&quot;," created="Fri, 19 Nov 2021 17:25:33 GMT"/>
							<outline text="url: item.link" created="Fri, 19 Nov 2021 17:25:37 GMT"/>
							<outline text="});" created="Fri, 19 Nov 2021 17:23:10 GMT"/>
							</outline>
						<outline text="});" created="Fri, 19 Nov 2021 17:22:28 GMT"/>
						</outline>
					<outline text="return (opml.stringify (theOutline));" created="Fri, 19 Nov 2021 17:26:29 GMT"/>
					<outline text="}" created="Fri, 19 Nov 2021 17:10:33 GMT"/>
					</outline>
				<outline text="function convertFeed (oldFeed) {" created="Fri, 19 Nov 2021 15:55:43 GMT">
					<outline text="Changes" isComment="true" created="Fri, 19 Nov 2021 16:46:10 GMT">
						<outline text="3/6/22; 9:23:18 AM by DW" created="Sun, 06 Mar 2022 14:23:17 GMT">
							<outline text="feedparser puts channel-level elements in each of the items. so we have to look for source:account and source:localtime in the first item in the items array. " created="Sun, 06 Mar 2022 14:23:19 GMT"/>
							</outline>
						<outline text="11/19/21; 11:46:14 AM by DW" created="Fri, 19 Nov 2021 16:46:13 GMT">
							<outline text="The feedparser package puts lots of extra stuff in the structure it creates. We only allow elements that are in the RSS 2.0 spec or the source namespace, as a first cut. We will probably include stuff from other namespaces to make large classes of feeds work properly." created="Fri, 19 Nov 2021 16:46:14 GMT"/>
							<outline text="I did not include source:outline because it needs to be unmangled. I don't want to send it out in the form that feedreader creates it. " created="Fri, 19 Nov 2021 16:52:00 GMT"/>
							</outline>
						</outline>
					<outline text="" created="Sun, 06 Mar 2022 14:26:10 GMT"/>
					<outline text="var newFeed = new Object ();" created="Fri, 19 Nov 2021 15:57:09 GMT"/>
					<outline text="" created="Sun, 06 Mar 2022 14:43:22 GMT"/>
					<outline text="function convertOutline (jstruct) { ">
						<outline text="Changes" isComment="true">
							<outline text="5/16/19; 2:21:41 PM by DW">
								<outline text="Cribbed from davereader package."/>
								</outline>
							<outline text="10/16/14; 1:22:05 PM by DW">
								<outline text="The previous version of this routine stopped working. So I wrote this in a testbed, and it works. It appears the new structure generated by FeedParser is simpler than the old one. Not sure when it changed. This is scary stuff. I'd like for this stuff *not* to change, because this is boiler-room code. I've sent an email to Dan to inquire about any possible changes. I should review their change notes (will do).">
									<outline text="https://github.com/danmactough/node-feedparser"/>
									</outline>
								</outline>
							</outline>
						<outline text="var theNewOutline = {};"/>
						<outline text="if (jstruct [&quot;@&quot;] !== undefined) {">
							<outline text="utils.copyScalars (jstruct [&quot;@&quot;], theNewOutline);"/>
							<outline text="}"/>
							</outline>
						<outline text="if (jstruct [&quot;source:outline&quot;] !== undefined) {">
							<outline text="if (jstruct [&quot;source:outline&quot;] instanceof Array) {">
								<outline text="var theArray = jstruct [&quot;source:outline&quot;];"/>
								<outline text="theNewOutline.subs = [];"/>
								<outline text="theArray.forEach (function (item) {">
									<outline text="theNewOutline.subs.push (convertOutline (item));"/>
									<outline text="});"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="theNewOutline.subs = [">
									<outline text="convertOutline (jstruct [&quot;source:outline&quot;])"/>
									<outline text="];"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="return (theNewOutline);"/>
						<outline text="}"/>
						</outline>
					<outline text="function getHeadValuesFromFirstItem () { //3/6/22 by DW" created="Sun, 06 Mar 2022 14:26:11 GMT">
						<outline text="if (oldFeed.items.length &gt; 0) {" created="Sun, 06 Mar 2022 14:26:35 GMT">
							<outline text="var item = oldFeed.items [0];" created="Sun, 06 Mar 2022 14:26:46 GMT"/>
							<outline text="if (item.meta !== undefined) {" created="Sun, 06 Mar 2022 14:28:49 GMT">
								<outline text="if (item.meta [&quot;source:account&quot;] !== undefined) {" created="Sun, 06 Mar 2022 14:40:24 GMT">
									<outline text="var account = item.meta [&quot;source:account&quot;]; " created="Sun, 06 Mar 2022 14:41:28 GMT"/>
									<outline text="newFeed.accounts = new Object ();" created="Sun, 06 Mar 2022 14:44:28 GMT"/>
									<outline text="if (Array.isArray (account)) {">
										<outline text="account.forEach (function (item) {" created="Sun, 06 Mar 2022 15:08:46 GMT">
											<outline text="var service = item  [&quot;@&quot;].service" created="Sun, 06 Mar 2022 15:09:46 GMT"/>
											<outline text="var name = item [&quot;#&quot;];" created="Sun, 06 Mar 2022 14:42:48 GMT"/>
											<outline text="newFeed.accounts [service] = name;" created="Sun, 06 Mar 2022 14:44:38 GMT"/>
											<outline text="});" created="Sun, 06 Mar 2022 15:08:55 GMT"/>
											</outline>
										<outline text="}"/>
										</outline>
									<outline text="else {" created="Sun, 06 Mar 2022 15:07:43 GMT">
										<outline text="var service = account [&quot;@&quot;].service; //something like twitter" created="Sun, 06 Mar 2022 14:42:15 GMT"/>
										<outline text="var name = account [&quot;#&quot;];" created="Sun, 06 Mar 2022 14:42:48 GMT"/>
										<outline text="newFeed.accounts [service] = name;" created="Sun, 06 Mar 2022 14:44:38 GMT"/>
										<outline text="}" created="Sun, 06 Mar 2022 15:07:46 GMT"/>
										</outline>
									<outline text="}" created="Sun, 06 Mar 2022 14:40:46 GMT"/>
									</outline>
								<outline text="if (item.meta [&quot;source:localtime&quot;] !== undefined) {" created="Sun, 06 Mar 2022 14:40:24 GMT">
									<outline text="var localtime = item.meta [&quot;source:localtime&quot;]; " created="Sun, 06 Mar 2022 14:41:28 GMT"/>
									<outline text="newFeed.localtime = localtime [&quot;#&quot;];" created="Sun, 06 Mar 2022 14:44:38 GMT"/>
									<outline text="}" created="Sun, 06 Mar 2022 14:40:46 GMT"/>
									</outline>
								<outline text="}" created="Sun, 06 Mar 2022 14:28:56 GMT"/>
								</outline>
							<outline text="}" created="Sun, 06 Mar 2022 14:26:42 GMT"/>
							</outline>
						<outline text="}" created="Sun, 06 Mar 2022 14:26:16 GMT"/>
						</outline>
					<outline text="" created="Sun, 06 Mar 2022 14:26:11 GMT"/>
					<outline text="console.log (&quot;convertFeed: oldFeed == &quot; + utils.jsonStringify (oldFeed));" isComment="true" created="Sun, 06 Mar 2022 14:20:05 GMT"/>
					<outline text="for (var x in oldFeed.head) {" created="Fri, 19 Nov 2021 16:00:27 GMT">
						<outline text="let val = oldFeed.head [x];" created="Fri, 19 Nov 2021 16:02:02 GMT"/>
						<outline text="if (val != null) {" created="Fri, 19 Nov 2021 16:02:13 GMT">
							<outline text="allowedHeadNames.forEach (function (name) {" created="Fri, 19 Nov 2021 16:41:41 GMT">
								<outline text="if (x == name) {" created="Fri, 19 Nov 2021 16:42:07 GMT">
									<outline text="newFeed [x] = val;" created="Fri, 19 Nov 2021 16:00:48 GMT"/>
									<outline text="}" created="Fri, 19 Nov 2021 16:42:13 GMT"/>
									</outline>
								<outline text="});" created="Fri, 19 Nov 2021 16:42:01 GMT"/>
								</outline>
							<outline text="}" created="Fri, 19 Nov 2021 16:02:19 GMT"/>
							</outline>
						<outline text="}" created="Fri, 19 Nov 2021 16:00:40 GMT"/>
						</outline>
					<outline text="" created="Sun, 06 Mar 2022 14:25:45 GMT"/>
					<outline text="getHeadValuesFromFirstItem (); //3/6/22 by DW" created="Sun, 06 Mar 2022 14:25:45 GMT"/>
					<outline text="" created="Sun, 06 Mar 2022 14:25:46 GMT"/>
					<outline text="if (isEmptyObject (newFeed.image)) {" created="Fri, 19 Nov 2021 17:12:24 GMT">
						<outline text="delete newFeed.image;" created="Fri, 19 Nov 2021 17:16:39 GMT"/>
						<outline text="}" created="Fri, 19 Nov 2021 17:16:43 GMT"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 16:02:47 GMT"/>
					<outline text="newFeed.items = new Array ();" created="Fri, 19 Nov 2021 16:08:19 GMT"/>
					<outline text="oldFeed.items.forEach (function (item) {" created="Fri, 19 Nov 2021 16:02:48 GMT">
						<outline text="var newItem = new Object ();" created="Fri, 19 Nov 2021 16:44:26 GMT"/>
						<outline text="for (var x in item) {" created="Fri, 19 Nov 2021 16:16:21 GMT">
							<outline text="val = item [x];" created="Fri, 19 Nov 2021 16:43:17 GMT"/>
							<outline text="if (val != null) {" created="Fri, 19 Nov 2021 16:43:22 GMT">
								<outline text="allowedItemNames.forEach (function (name) {" created="Fri, 19 Nov 2021 16:41:41 GMT">
									<outline text="if (x == name) {" created="Fri, 19 Nov 2021 16:42:07 GMT">
										<outline text="if (x == &quot;source:outline&quot;) {" created="Sun, 06 Mar 2022 15:52:46 GMT">
											<outline text="val = convertOutline (item [&quot;source:outline&quot;]);"/>
											<outline text="newItem.outline = val;" created="Fri, 19 Nov 2021 16:00:48 GMT"/>
											<outline text="}" created="Sun, 06 Mar 2022 15:53:34 GMT"/>
											</outline>
										<outline text="else {" created="Mon, 07 Mar 2022 15:40:36 GMT">
											<outline text="if (x == &quot;enclosures&quot;) {" created="Sun, 20 Mar 2022 15:49:21 GMT">
												<outline text="if (item.enclosures.length &gt; 0) {" created="Sun, 20 Mar 2022 15:50:34 GMT">
													<outline text="newItem.enclosure = item.enclosures [0];" created="Sun, 20 Mar 2022 16:46:04 GMT"/>
													<outline text="}" created="Sun, 20 Mar 2022 15:50:45 GMT"/>
													</outline>
												<outline text="}" created="Sun, 20 Mar 2022 15:49:32 GMT"/>
												</outline>
											<outline text="else {" created="Sun, 20 Mar 2022 15:49:33 GMT">
												<outline text="newItem [x] = val;" created="Fri, 19 Nov 2021 16:00:48 GMT"/>
												<outline text="}" created="Sun, 20 Mar 2022 15:49:36 GMT"/>
												</outline>
											<outline text="}" created="Mon, 07 Mar 2022 15:40:38 GMT"/>
											</outline>
										<outline text="}" created="Fri, 19 Nov 2021 16:42:13 GMT"/>
										</outline>
									<outline text="});" created="Fri, 19 Nov 2021 16:42:01 GMT"/>
									</outline>
								<outline text="}" created="Fri, 19 Nov 2021 16:43:30 GMT"/>
								</outline>
							<outline text="}" created="Fri, 19 Nov 2021 16:43:13 GMT"/>
							</outline>
						<outline text="newItem.guid = getItemPermalink (item);" created="Fri, 19 Nov 2021 16:55:02 GMT"/>
						<outline text="if (isEmptyObject (newItem.source)) {" created="Fri, 19 Nov 2021 17:12:24 GMT">
							<outline text="delete newItem.source;" created="Fri, 19 Nov 2021 17:16:39 GMT"/>
							<outline text="}" created="Fri, 19 Nov 2021 17:16:43 GMT"/>
							</outline>
						<outline text="newFeed.items.push (newItem);" created="Fri, 19 Nov 2021 16:44:44 GMT"/>
						<outline text="});" created="Fri, 19 Nov 2021 16:03:02 GMT"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 16:04:38 GMT"/>
					<outline text="return (newFeed);" created="Fri, 19 Nov 2021 16:04:39 GMT"/>
					<outline text="}" created="Fri, 19 Nov 2021 15:55:55 GMT"/>
					</outline>
				<outline text="" created="Sat, 05 Mar 2022 17:33:04 GMT"/>
				<outline text="function readFeed (url, callback) {" created="Fri, 19 Nov 2021 15:54:09 GMT">
					<outline text="davefeedread.parseUrl (url, config.timeOutSecs, function (err, theFeed) {">
						<outline text="if (err) {" created="Fri, 19 Nov 2021 15:55:07 GMT">
							<outline text="callback (err);" created="Fri, 19 Nov 2021 15:55:11 GMT"/>
							<outline text="}" created="Fri, 19 Nov 2021 15:55:15 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 19 Nov 2021 15:55:16 GMT">
							<outline text="callback (undefined, convertFeed (theFeed));" created="Fri, 19 Nov 2021 15:55:26 GMT"/>
							<outline text="}" created="Fri, 19 Nov 2021 15:55:18 GMT"/>
							</outline>
						<outline text="});" created="Fri, 19 Nov 2021 15:55:02 GMT"/>
						</outline>
					<outline text="}" created="Fri, 19 Nov 2021 15:54:21 GMT"/>
					</outline>
				</outline>
			<outline text="example/test.js" created="Sat, 05 Mar 2022 17:17:16 GMT">
				<outline text="var myProductName = &quot;test&quot;; myVersion = &quot;0.4.0&quot;;   "/>
				<outline text="" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const reallysimple = require (&quot;reallysimple&quot;);" isComment="true" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const reallysimple = require (&quot;../reallysimple.js&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="" created="Sat, 05 Mar 2022 17:19:44 GMT"/>
				<outline text="const urlfeed = &quot;http://scripting.com/rss.xml&quot;;" created="Sat, 05 Mar 2022 17:19:45 GMT"/>
				<outline text="const urlfeed = &quot;http://scripting.com/publicfolder/tmp/rss.xml&quot;;" isComment="true" created="Sat, 05 Mar 2022 17:19:45 GMT"/>
				<outline text="" created="Sat, 05 Mar 2022 17:19:59 GMT"/>
				<outline text="reallysimple.readFeed (urlfeed, function (err, theFeed) {" created="Sat, 05 Mar 2022 17:19:59 GMT">
					<outline text="if (err) {" created="Sat, 05 Mar 2022 17:27:06 GMT">
						<outline text="console.log (err.message);" created="Sat, 05 Mar 2022 17:27:08 GMT"/>
						<outline text="}" created="Sat, 05 Mar 2022 17:27:14 GMT"/>
						</outline>
					<outline text="else {" created="Sat, 05 Mar 2022 17:27:15 GMT">
						<outline text="var jsontext = utils.jsonStringify (theFeed);" created="Mon, 07 Mar 2022 15:36:15 GMT"/>
						<outline text="console.log (&quot;theFeed == &quot; + jsontext);" created="Sat, 05 Mar 2022 17:26:42 GMT"/>
						<outline text="fs.writeFile (&quot;test.json&quot;, jsontext, function (err) {" created="Mon, 07 Mar 2022 15:36:03 GMT">
							<outline text="if (err) {" created="Mon, 07 Mar 2022 15:36:43 GMT">
								<outline text="console.log (err.message);" created="Mon, 07 Mar 2022 15:36:57 GMT"/>
								<outline text="}" created="Mon, 07 Mar 2022 15:36:46 GMT"/>
								</outline>
							<outline text="});" created="Mon, 07 Mar 2022 15:36:38 GMT"/>
							</outline>
						<outline text="}" created="Sat, 05 Mar 2022 17:27:17 GMT"/>
						</outline>
					<outline text="});" created="Sat, 05 Mar 2022 17:20:19 GMT"/>
					</outline>
				</outline>
			<outline text="example/package.json" created="Mon, 07 Mar 2022 15:44:34 GMT">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;test&quot;, "/>
					<outline text="&quot;description&quot;: &quot;Testing the reallysimple package&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;, "/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;main&quot;: &quot;test.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;reallysimple&quot;: &quot;*&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;engines&quot;: {">
						<outline text="&quot;node&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Sat, 05 Mar 2022 16:54:13 GMT">
				<outline text="# reallysimple" created="Sat, 05 Mar 2022 16:54:15 GMT">
					<outline text="JavaScript code to read a feed. Calls back with a JavaScript structure, hiding all the history." created="Mon, 07 Mar 2022 15:05:45 GMT"/>
					</outline>
				<outline text="#### What formats are supported?" created="Thu, 17 Mar 2022 15:42:49 GMT">
					<outline text="RSS, Atom, and RDF." created="Thu, 17 Mar 2022 15:42:57 GMT"/>
					</outline>
				<outline text="#### Why?">
					<outline text="To make reading a feed from a JavaScript app as easy as possible. " created="Thu, 17 Mar 2022 15:40:05 GMT"/>
					<outline text="To hide all the history to get it out of your way. " created="Thu, 17 Mar 2022 15:40:29 GMT"/>
					<outline text="If developers can quickly put together an app that uses feeds, people will try out more ideas, add feed support to more apps." created="Mon, 07 Mar 2022 15:16:54 GMT"/>
					<outline text="I needed to simplify feed reading for the scripting system in Drummer. For scripting, simplicity is everything. Why not share the simplicity with lower level code." created="Mon, 07 Mar 2022 15:17:44 GMT"/>
					<outline text="There probably is a small tradeoff in performance, you can probably write faster code by going straight to the feedparser level. And that's fine for applications that require the maximum performance, perhaps where you're reading a thousand feeds per sectond. " created="Mon, 07 Mar 2022 15:18:12 GMT"/>
					</outline>
				<outline text="#### A coding example" created="Mon, 07 Mar 2022 15:11:02 GMT">
					<outline text="Here's how you call the package." created="Mon, 07 Mar 2022 15:11:09 GMT"/>
					<outline text="const reallysimple = require (&quot;reallysimple&quot;);" created="Mon, 07 Mar 2022 15:12:02 GMT"/>
					<outline text="const url = &quot;http://scripting.com/rss.xml&quot;;" created="Mon, 07 Mar 2022 15:12:17 GMT"/>
					<outline text="reallysimple.readFeed (url, function (err, theFeed) {" created="Mon, 07 Mar 2022 15:11:18 GMT">
						<outline text="if (!err) {" created="Mon, 07 Mar 2022 15:12:40 GMT">
							<outline text="console.log (&quot;theFeed == &quot; + JSON.stringify (theFeed));" created="Mon, 07 Mar 2022 15:12:44 GMT"/>
							<outline text="}" created="Mon, 07 Mar 2022 15:13:04 GMT"/>
							</outline>
						<outline text="}):" created="Mon, 07 Mar 2022 15:11:54 GMT"/>
						</outline>
					<outline text="Here's what shows up in the console when you run that code. " created="Mon, 07 Mar 2022 15:10:30 GMT"/>
					</outline>
				<outline text="#### What we build on" created="Mon, 07 Mar 2022 15:25:06 GMT">
					<outline text="Thanks to Dan MacTough for the &lt;a href=&quot;https://www.npmjs.com/package/feedparser&quot;&gt;feedparser&lt;/a&gt; package." created="Mon, 07 Mar 2022 15:25:07 GMT"/>
					<outline text="It also builds on the davefeedread package, which simplifies the programming interface to feedparser." created="Mon, 07 Mar 2022 15:25:33 GMT"/>
					<outline text="This package further simplifies the struct returned by &lt;a href=&quot;https://www.npmjs.com/package/davefeedread&quot;&gt;davefeedread&lt;/a&gt;." created="Thu, 17 Mar 2022 15:46:06 GMT"/>
					</outline>
				<outline text="#### Work notes" created="Sat, 05 Mar 2022 17:30:26 GMT">
					<outline text="3/7/22; 10:27:47 AM by DW" created="Mon, 07 Mar 2022 15:27:46 GMT">
						<outline text="Start the reallysimple repo. Publish the NPM package. " created="Mon, 07 Mar 2022 15:27:47 GMT"/>
						</outline>
					<outline text="3/6/22; 11:27:52 AM by DW" created="Sun, 06 Mar 2022 16:27:50 GMT">
						<outline text="It now understands various elements from the source namespace, including source:account, source:localtime and source:outline." created="Sun, 06 Mar 2022 16:27:53 GMT"/>
						<outline text="Started a new private GitHub repo for the project and saved the files. " created="Sun, 06 Mar 2022 16:28:33 GMT"/>
						<outline text="Added it to my NPM sub-menu, this is going to be a supported project." created="Sun, 06 Mar 2022 16:29:01 GMT"/>
						</outline>
					</outline>
				<outline text="#### Comments, questions?" created="Mon, 07 Mar 2022 15:26:41 GMT">
					<outline text="Please post your comments and questions in the &lt;a href=&quot;https://github.com/scripting/reallysimple/issues/new&quot;&gt;issues section&lt;/a&gt; of this repo." created="Mon, 07 Mar 2022 15:26:47 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Sun, 06 Mar 2022 16:28:51 GMT">
			<outline text="nodeEditorSuite.utilities.buildReallySimple ()"/>
			</outline>
		</body>
	</opml>
